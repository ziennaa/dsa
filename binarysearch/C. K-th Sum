#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
int main(){
    ll n, k;
    cin>>n>>k;
    vector<ll> a(n);
    vector<ll> b(n);
    for(ll i=0; i<n; i++) cin>>a[i];
    for(ll i=0; i<n; i++) cin>>b[i];
    ll minia = LLONG_MAX;
    ll minib = LLONG_MAX;
    ll maxia = LLONG_MIN;
    ll maxib = LLONG_MIN;
    for(ll i=0; i<n; i++){
        minia = min(minia, a[i]);
        minib = min(minib, b[i]);
        maxia = max(maxia, a[i]);
        maxib = max(maxib, b[i]);
    }
    sort(b.begin(), b.end());
    ll low=minia + minib;
    ll high=maxia+ maxib;
    while(low<high){
        ll mid = low+(high-low)/2;
        ll count=0;
        for(ll i=0; i<n; i++){
            count += upper_bound(b.begin(), b.end(), mid-a[i])-b.begin();
            // how many nos in b can pair with a[i] to make sum<=mid
            // basically we're seeing how many elements in b are <= (mid-a[i])
            // so b[j]<= mid-a[i]
            /*mid = 10 and a[i]=4
            and b=[1,3,5,7,9]
            mid-a[i]=6 how many elments of b are <=6
            upper bound returns the add/pointer of the first elment that is greater than value
            and after subtracting b.begin() we get the index of the first elment>6*/
        }
        if(count>=k){
            high = mid;
        }else{
            low = mid+1;
        }
    }
    cout<<low<<endl;
}
